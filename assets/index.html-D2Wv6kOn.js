import{_ as i,c as e,b as a,o as t}from"./app-CMaXPbQ6.js";const n={};function p(l,s){return t(),e("div",null,s[0]||(s[0]=[a(`<p>以下是使用 <strong>Mermaid</strong> 绘制的流程图，清晰展示问题诊断与解决步骤：</p><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-mermaid"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">flowchart TD</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    A[部署失败: 403 Permission Denied] --&gt; B{原因分析}</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    B --&gt; C1[GITHUB_TOKEN权限不足]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    B --&gt; C2[gh-pages分支受保护]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    B --&gt; C3[私有仓库限制]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    C1 --&gt; D1[开启写入权限]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    D1 --&gt; E1[Settings → Actions → General → 勾选 Read and write]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    C2 --&gt; D2[关闭分支保护]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    D2 --&gt; E2[Settings → Branches → 临时禁用保护]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    C3 --&gt; D3[使用PAT替代]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    D3 --&gt; E3[生成Token → 添加到Secrets → 更新workflow]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    E1 --&gt; F[重新运行工作流]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    E2 --&gt; F</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    E3 --&gt; F</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    F --&gt; G{成功?}</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    G --&gt;|是| H[访问GitHub Pages验证]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    G --&gt;|否| I[检查构建目录/dist]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    I --&gt; J[手动创建gh-pages分支]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    J --&gt; F</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://r2.hexgrid.ink/public/preview/image/blog_898d5c1ed21b0ef4a9c4227d9bc451da81cb3eb0.jpg" alt=" "><img src="https://r2.hexgrid.ink/public/preview/image/90951845_p0.png" alt=" "><img src="https://r2.hexgrid.ink/public/preview/image/beer-pilot.jpg" alt=" "><img src="https://r2.hexgrid.ink/public/preview/image/blog_2881057-605fc10a4f-00000003.webp" alt=" "></p><h3 id="图表说明" tabindex="-1"><a class="header-anchor" href="#图表说明"><span>图表说明：</span></a></h3><ol><li><strong>逻辑路径</strong>：从错误出发，分3种原因展开解决方案。</li><li><strong>关键操作</strong>：用绿色矩形标出GitHub后台的具体操作位置。</li><li><strong>循环验证</strong>：失败时可检查构建目录或手动初始化分支。</li><li><strong>简洁提示</strong>：所有操作最终指向重新运行工作流验证。</li></ol>`,5)]))}const h=i(n,[["render",p]]),g=JSON.parse(`{"path":"/article/hktrpym1/","title":"mermaid_graph tests","lang":"zh-CN","frontmatter":{"title":"mermaid_graph tests","createTime":"2025/06/06 19:45:48","permalink":"/article/hktrpym1/","description":"以下是使用 Mermaid 绘制的流程图，清晰展示问题诊断与解决步骤： 图表说明： 逻辑路径：从错误出发，分3种原因展开解决方案。 关键操作：用绿色矩形标出GitHub后台的具体操作位置。 循环验证：失败时可检查构建目录或手动初始化分支。 简洁提示：所有操作最终指向重新运行工作流验证。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mermaid_graph tests\\",\\"image\\":[\\"https://www.hexgrid.ink/public/preview/image/blog_898d5c1ed21b0ef4a9c4227d9bc451da81cb3eb0.jpg\\",\\"https://www.hexgrid.ink/public/preview/image/90951845_p0.png\\",\\"https://www.hexgrid.ink/public/preview/image/beer-pilot.jpg\\",\\"https://www.hexgrid.ink/public/preview/image/blog_2881057-605fc10a4f-00000003.webp\\"],\\"dateModified\\":\\"2025-06-08T07:38:10.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.hexgrid.ink/article/hktrpym1/"}],["meta",{"property":"og:site_name","content":"icecream8086's blog"}],["meta",{"property":"og:title","content":"mermaid_graph tests"}],["meta",{"property":"og:description","content":"以下是使用 Mermaid 绘制的流程图，清晰展示问题诊断与解决步骤： 图表说明： 逻辑路径：从错误出发，分3种原因展开解决方案。 关键操作：用绿色矩形标出GitHub后台的具体操作位置。 循环验证：失败时可检查构建目录或手动初始化分支。 简洁提示：所有操作最终指向重新运行工作流验证。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.hexgrid.ink/public/preview/image/blog_898d5c1ed21b0ef4a9c4227d9bc451da81cb3eb0.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-08T07:38:10.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-08T07:38:10.000Z"}]]},"readingTime":{"minutes":0.92,"words":277},"git":{"createdTime":1749210520000,"updatedTime":1749368290000,"contributors":[{"name":"LinLai","username":"LinLai","email":"zzbsn.cn@outlook.com","commits":5,"avatar":"https://avatars.githubusercontent.com/LinLai?v=4","url":"https://github.com/LinLai"}]},"autoDesc":true,"filePathRelative":"preview/mermaid_graph.md","headers":[],"categoryList":[{"id":"5ebeb6","sort":10002,"name":"preview"}]}`);export{h as comp,g as data};
